{"ast":null,"code":"import { getMoreWorks } from \"../actions/worksAC\";\nimport { connect } from \"react-redux\";\nimport OurWorks from \"../components/ourWorks\";\n\nconst mapStateToProps = state => ({\n  works: state.works.works,\n  setLoaderFalse: state.setLoaderFalse,\n  header: state.header.header && JSON.parse(state.header.header[Object.keys(state.header.header).find(item => state.header.header[item].system_name === 'Works')].text)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks);","map":{"version":3,"sources":["E:\\React-app\\frontend\\src\\containers\\works.js"],"names":["getMoreWorks","connect","OurWorks","mapStateToProps","state","works","setLoaderFalse","header","JSON","parse","Object","keys","find","item","system_name","text","mapDispatchToProps","dispatch","fetchData","url","start","end"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,oBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYA,KADW;AAE9BC,EAAAA,cAAc,EAAEF,KAAK,CAACE,cAFQ;AAG9BC,EAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaA,MAAb,IAAuBC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACG,MAAN,CAAaA,MAAb,CAAoBG,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACG,MAAN,CAAaA,MAAzB,EAAiCK,IAAjC,CAAsCC,IAAI,IAAIT,KAAK,CAACG,MAAN,CAAaA,MAAb,CAAoBM,IAApB,EAA0BC,WAA1B,KAA0C,OAAxF,CAApB,EAAsHC,IAAjI;AAHD,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,SAAS,EAAE,CAACC,GAAD,EAAMC,KAAN,EAAaC,GAAb,KAAqBJ,QAAQ,CAACjB,YAAY,CAACmB,GAAD,EAAMC,KAAN,EAAaC,GAAb,CAAb;AADJ,CAAL,CAAnC;;AAGA,eAAepB,OAAO,CAACE,eAAD,EAAkBa,kBAAlB,CAAP,CAA6Cd,QAA7C,CAAf","sourcesContent":["import {getMoreWorks} from \"../actions/worksAC\";\r\nimport {connect} from \"react-redux\";\r\nimport OurWorks from \"../components/ourWorks\";\r\n\r\nconst mapStateToProps = state => ({\r\n    works: state.works.works,\r\n    setLoaderFalse: state.setLoaderFalse,\r\n    header: state.header.header && JSON.parse(state.header.header[Object.keys(state.header.header).find(item => state.header.header[item].system_name === 'Works')].text)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks)"]},"metadata":{},"sourceType":"module"}
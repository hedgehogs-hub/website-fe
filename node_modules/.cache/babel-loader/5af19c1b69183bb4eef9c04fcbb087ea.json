{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-app\\\\frontend\\\\src\\\\components\\\\ourWorks.js\";\nimport React from \"react\";\nimport \"../styles/ourWorks.css\";\nimport { getMoreWorks } from \"../actions/worksAC\";\nimport { connect } from \"react-redux\";\n\nclass OurWorks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: 4,\n      workList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchData(\"http://localhost/backend/works.php\", this.state.start - 4, 4);\n  }\n\n  render() {\n    var count = 4;\n    var start = this.state.start; // if(this.props.works&& !this.state.workList.length){\n    //     this.state.workList=this.props.works\n    //\n    // }\n\n    const getMoreData = () => {\n      this.props.fetchData(\"http://localhost/backend/works.php\", this.state.start, count);\n      start += 4;\n      console.log(this.state.start);\n      this.setState(start = {\n        start\n      });\n\n      if (this.props.works !== this.state.workList) {\n        for (var i in this.props.works) {\n          this.state.workList = [...this.state.workList, this.props.works[i]];\n        }\n      }\n    };\n\n    if (this.props.works !== this.state.workList && this.state.workList.length === count) {\n      for (var i in this.props.works) {\n        this.state.workList = [...this.state.workList, this.props.works[i]];\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"worksContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.title.workTitle ? this.props.title.workTitle.title : \"\"), React.createElement(\"div\", {\n      className: \"worksContext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.title.workTitle ? this.props.title.workTitle.context : \"\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"workList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.workList.map((data, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.img,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"workInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, data.name), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, data.context)));\n    })), React.createElement(\"button\", {\n      onClick: getMoreData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"LOAD MORE\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  works: state.works,\n  title: state.header\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks);","map":{"version":3,"sources":["E:\\React-app\\frontend\\src\\components\\ourWorks.js"],"names":["React","getMoreWorks","connect","OurWorks","Component","state","start","workList","componentDidMount","props","fetchData","render","count","getMoreData","console","log","setState","works","i","length","title","workTitle","context","map","data","index","img","name","mapStateToProps","header","mapDispatchToProps","dispatch","url","end"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../styles/ourWorks.css\";\r\nimport {getMoreWorks} from \"../actions/worksAC\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass OurWorks extends React.Component {\r\n    state = {\r\n        start: 4,\r\n        workList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchData(\"http://localhost/backend/works.php\", this.state.start-4, 4);\r\n    }\r\n    render() {\r\n        var count = 4\r\n        var start = this.state.start\r\n        // if(this.props.works&& !this.state.workList.length){\r\n        //     this.state.workList=this.props.works\r\n        //\r\n        // }\r\n        const getMoreData = () => {\r\n            this.props.fetchData(\"http://localhost/backend/works.php\", this.state.start, count);\r\n            start+=4\r\n            console.log(this.state.start)\r\n            this.setState(start = {start})\r\n            if(this.props.works!==this.state.workList){\r\n            for (var i in this.props.works) {\r\n                    this.state.workList = [...this.state.workList, this.props.works[i]]\r\n                }}\r\n        }\r\n        if(this.props.works!==this.state.workList&&this.state.workList.length===count){\r\n            for (var i in this.props.works) {\r\n                this.state.workList = [...this.state.workList, this.props.works[i]]\r\n            }}\r\n            return (\r\n                <div className=\"worksContent\">\r\n                    <h1>{this.props.title.workTitle ? this.props.title.workTitle.title : \"\"}</h1>\r\n                    <div className=\"worksContext\">\r\n                        <hr/>\r\n                        <h6>{this.props.title.workTitle ? this.props.title.workTitle.context : \"\"}</h6>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"workList\">\r\n                        {this.state.workList.map((data, index) => {\r\n\r\n                            return (\r\n                                <div key={index} className=\"work\">\r\n                                    <img src={data.img} alt=\"img\"/>\r\n                                    <div className=\"workInfo\">\r\n                                        <h4>{data.name}</h4>\r\n                                        <h6>{data.context}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <button onClick={getMoreData}>LOAD MORE</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    works: state.works,\r\n    title: state.header\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks)"]},"metadata":{},"sourceType":"module"}
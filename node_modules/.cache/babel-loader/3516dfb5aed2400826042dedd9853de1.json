{"ast":null,"code":"import instance from './api';\nimport { testimonialsContentDataSuccess } from \"./testimonialsAC\";\nconst type = \"CLIENTS_CONTENT_DATA_SUCCESS\";\nexport function clientsContentDataSuccess(clients) {\n  return {\n    type: type,\n    payload: clients\n  };\n}\nexport const clientsContentData = url => dispatch => {\n  // Promise is resolved and value is inside of the response const.\n  const response = instance.get(url).then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return response;\n  }).then(response => response.json()).then(clients => dispatch(clientsContentDataSuccess(clients)));\n};","map":{"version":3,"sources":["E:\\React-app\\frontend\\src\\actions\\clientsAC.js"],"names":["instance","testimonialsContentDataSuccess","type","clientsContentDataSuccess","clients","payload","clientsContentData","url","dispatch","response","get","then","ok","Error","statusText","json"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,OAArB;AACA,SAAQC,8BAAR,QAA6C,kBAA7C;AACA,MAAMC,IAAI,GAAC,8BAAX;AACA,OAAO,SAASC,yBAAT,CAAmCC,OAAnC,EAA4C;AAC/C,SAAO;AACHF,IAAAA,IAAI,EAAEA,IADH;AAEHG,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH;AAED,OAAO,MAAME,kBAAkB,GAAKC,GAAD,IAASC,QAAQ,IAAI;AAEpD;AACA,QAAMC,QAAQ,GAAIT,QAAQ,CAACU,GAAT,CAAaH,GAAb,EAAkBI,IAAlB,CACdF,QAAQ,IAAI;AACR,QAAI,CAACA,QAAQ,CAACG,EAAd,EAAkB;AACd,YAAM,IAAIC,KAAJ,CAAUJ,QAAQ,CAACK,UAAnB,CAAN;AACH;;AACD,WAAOL,QAAP;AACH,GANa,EAObE,IAPa,CAORF,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAPJ,EAQbJ,IARa,CAQRP,OAAO,IAAII,QAAQ,CAACL,yBAAyB,CAACC,OAAD,CAA1B,CARX,CAAlB;AASH,CAZM","sourcesContent":["import instance from './api';\r\nimport {testimonialsContentDataSuccess} from \"./testimonialsAC\";\r\nconst type=\"CLIENTS_CONTENT_DATA_SUCCESS\";\r\nexport function clientsContentDataSuccess(clients) {\r\n    return {\r\n        type: type,\r\n        payload: clients\r\n    }\r\n}\r\n\r\nexport const clientsContentData =  (url) => dispatch => {\r\n\r\n    // Promise is resolved and value is inside of the response const.\r\n    const response =  instance.get(url).then(\r\n        response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response\r\n        })\r\n        .then(response => response.json())\r\n        .then(clients => dispatch(clientsContentDataSuccess(clients)))\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
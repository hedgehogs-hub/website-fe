{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-app\\\\frontend\\\\src\\\\components\\\\ourWorks.js\";\nimport React from \"react\";\nimport \"../styles/sass/ourWorks.css\";\nimport { getMoreWorks } from \"../actions/worksAC\";\nimport { connect } from \"react-redux\";\n\nclass OurWorks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: 4,\n      loader: false,\n      loaded: true,\n      workList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchData(\"works.php\", this.state.start - 4, 4);\n  }\n\n  componentDidUpdate() {}\n\n  componentWillMount() {\n    this.props.fetchData(\"works.php\", this.state.start - 4, 4);\n    this.setState({\n      workList: this.props.works\n    });\n  }\n\n  render() {\n    var count = 4;\n    var start = this.state.start;\n\n    if (this.props.works && !this.state.workList.length) {\n      this.state.workList = this.props.works;\n    }\n\n    const getMoreData = () => {\n      this.setState({\n        loader: true\n      });\n      this.props.fetchData(\"works.php\", this.state.start, count);\n      start += 4;\n      this.setState(start = {\n        start\n      });\n      var works = this.state.workList;\n\n      for (var i in this.props.works) {\n        works = [...works, this.props.works[i]];\n      }\n\n      this.setState({\n        workList: works\n      });\n      this.setState({\n        loader: false\n      });\n    };\n\n    if (this.state.loader) {\n      console.log(\"loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"worksContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.title.workTitle ? this.props.title.workTitle.title : \"\"), React.createElement(\"div\", {\n      className: \"worksContext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.title.workTitle ? this.props.title.workTitle.context : \"\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"workList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.workList.map((data, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.img,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"workInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, data.name), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, data.context)));\n    })), React.createElement(\"button\", {\n      onClick: getMoreData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"LOAD MORE\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  works: state.works,\n  title: state.header\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks);","map":{"version":3,"sources":["E:\\React-app\\frontend\\src\\components\\ourWorks.js"],"names":["React","getMoreWorks","connect","OurWorks","Component","state","start","loader","loaded","workList","componentDidMount","props","fetchData","componentDidUpdate","componentWillMount","setState","works","render","count","length","getMoreData","i","console","log","title","workTitle","context","map","data","index","img","name","mapStateToProps","header","mapDispatchToProps","dispatch","url","end"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../styles/sass/ourWorks.css\";\r\nimport {getMoreWorks} from \"../actions/worksAC\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass OurWorks extends React.Component {\r\n    state = {\r\n        start: 4,\r\n        loader:false,\r\n        loaded:true,\r\n        workList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchData(\"works.php\", this.state.start-4, 4);\r\n        \r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    componentWillMount() {\r\n        this.props.fetchData(\"works.php\", this.state.start-4, 4);\r\n        this.setState({workList:this.props.works})\r\n    }\r\n\r\n    render() {\r\n        var count = 4\r\n        var start = this.state.start\r\n        if(this.props.works&& !this.state.workList.length){\r\n            this.state.workList=this.props.works\r\n        }\r\n        const getMoreData = () => {\r\n            this.setState({loader:true})\r\n\r\n                this.props.fetchData(\"works.php\", this.state.start, count);\r\n                start+=4\r\n                this.setState(start = {start})\r\n                var works =this.state.workList\r\n                for (var i in this.props.works) {\r\n                    works=[...works, this.props.works[i]]\r\n                }\r\n                this.setState({workList: works})\r\n                this.setState({loader:false})\r\n\r\n\r\n        }\r\n        if(this.state.loader){\r\n            console.log(\"loading...\")\r\n        }\r\n            return (\r\n                <div className=\"worksContent\">\r\n                    <h1>{this.props.title.workTitle ? this.props.title.workTitle.title : \"\"}</h1>\r\n                    <div className=\"worksContext\">\r\n                        <hr/>\r\n                        <h6>{this.props.title.workTitle ? this.props.title.workTitle.context : \"\"}</h6>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"workList\">\r\n                        {this.state.workList.map((data, index) => {\r\n                            return (\r\n                                <div key={index} className=\"work\">\r\n                                    <img src={data.img} alt=\"img\"/>\r\n                                    <div className=\"workInfo\">\r\n                                        <h4>{data.name}</h4>\r\n                                        <h6>{data.context}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <button onClick={getMoreData}>LOAD MORE</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    works: state.works,\r\n    title: state.header\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-app\\\\frontend\\\\src\\\\components\\\\ourWorks.js\";\nimport React from \"react\";\nimport \"../styles/ourWorks.css\";\nimport { getMoreWorks } from \"../actions/worksAC\";\nimport { connect } from \"react-redux\";\n\nclass OurWorks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: 0,\n      count: 4,\n      workList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchData(\"http://localhost/backend/works.php\", this.state.start, this.state.count);\n  }\n\n  render() {\n    var workList = [];\n    var showSpiner = false;\n    if (!this.state.workList.length) this.state.workList = this.props.works;\n    workList = this.state.workList;\n    let OurWorks = workList.map((data, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.img,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"workInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, data.name), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, data.context)));\n    });\n    var start = this.state.start;\n\n    const getMoreData = () => {\n      showSpiner = true;\n      setTimeout(() => {\n        start += 4;\n        this.setState(start = {\n          start\n        });\n        this.props.fetchData(\"http://localhost/backend/works.php\", this.state.start + 4, this.state.count);\n        console.log('svdv');\n\n        for (var i in this.props.works) {\n          this.state.workList = [...this.state.workList, this.props.works[i]];\n        }\n      }, 3000);\n      OurWorks = workList.map((data, index) => {\n        showSpiner = false;\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"work\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: data.img,\n          alt: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"workInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, data.name), React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, data.context)));\n      });\n    };\n\n    console.log(showSpiner);\n\n    if (showSpiner) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"worksContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.title.workTitle ? this.props.title.workTitle.title : \"\"), React.createElement(\"div\", {\n        className: \"worksContext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.title.workTitle ? this.props.title.workTitle['context'] : \"\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"workList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, OurWorks), React.createElement(\"button\", {\n        onClick: getMoreData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"LOAD MORE\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  works: state.works,\n  title: state.header\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: (url, start, end) => dispatch(getMoreWorks(url, start, end))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks);","map":{"version":3,"sources":["E:\\React-app\\frontend\\src\\components\\ourWorks.js"],"names":["React","getMoreWorks","connect","OurWorks","Component","state","start","count","workList","componentDidMount","props","fetchData","render","showSpiner","length","works","map","data","index","img","name","context","getMoreData","setTimeout","setState","console","log","i","title","workTitle","mapStateToProps","header","mapDispatchToProps","dispatch","url","end"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../styles/ourWorks.css\";\r\nimport {getMoreWorks} from \"../actions/worksAC\";\r\nimport {connect} from \"react-redux\";\r\nclass OurWorks extends React.Component{\r\n    state = {\r\n        start: 0,\r\n        count: 4,\r\n        workList: []\r\n    };\r\n    componentDidMount() {\r\n        this.props.fetchData(\"http://localhost/backend/works.php\",this.state.start,this.state.count);\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        var workList=[]\r\n        var showSpiner=false\r\n        if(!this.state.workList.length)this.state.workList=this.props.works\r\n        workList=this.state.workList\r\n        let OurWorks = workList.map((data, index) => {\r\n\r\n            return (\r\n                <div key={index} className=\"work\">\r\n                    <img src={data.img} alt=\"img\"/>\r\n                    <div className=\"workInfo\">\r\n                        <h4>{data.name}</h4>\r\n                        <h6>{data.context}</h6>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        var start=this.state.start\r\n        const getMoreData=()=>{\r\n            showSpiner=true\r\n            setTimeout(()=>{\r\n                start+=4\r\n                this.setState(start={start})\r\n                this.props.fetchData(\"http://localhost/backend/works.php\",this.state.start+4,this.state.count);\r\n                console.log('svdv')\r\n                for(var i in this.props.works) {\r\n                    this.state.workList = [...this.state.workList, this.props.works[i]]\r\n            }},3000)\r\n\r\n\r\n            OurWorks = workList.map((data, index) => {\r\n                showSpiner=false\r\n                return (\r\n                    <div key={index} className=\"work\">\r\n                        <img src={data.img} alt=\"img\"/>\r\n                        <div className=\"workInfo\">\r\n                            <h4>{data.name}</h4>\r\n                            <h6>{data.context}</h6>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        console.log(showSpiner)\r\n       if(showSpiner){\r\n           return <div>Loading...</div>\r\n       }\r\n       else{ return (\r\n            <div className=\"worksContent\">\r\n                <h1>{this.props.title.workTitle ? this.props.title.workTitle.title:\"\"}</h1>\r\n                <div className=\"worksContext\">\r\n                    <hr/>\r\n                    <h6>{this.props.title.workTitle?this.props.title.workTitle['context']:\"\"}</h6>\r\n                    <hr/>\r\n                </div>\r\n                <div className=\"workList\">\r\n                    {OurWorks}\r\n                </div>\r\n                <button onClick={getMoreData}>LOAD MORE</button>\r\n            </div>\r\n        )}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    works: state.works,\r\n    title: state.header\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchData: (url,start,end)=> dispatch(getMoreWorks(url,start,end))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OurWorks)"]},"metadata":{},"sourceType":"module"}
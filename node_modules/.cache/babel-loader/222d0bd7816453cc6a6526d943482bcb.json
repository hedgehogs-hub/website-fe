{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-app\\\\frontend\\\\src\\\\components\\\\ourWorks.js\";\nimport React from \"react\";\nimport \"../styles/sass/ourWorks.css\";\nimport Loader from \"../resource/loader.svg\";\n\nclass OurWorks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      start: 4,\n      loader: {\n        display: \"block\"\n      },\n      workList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchData(\"works.php\", this.state.start - 4, 4);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.works !== this.props.works) {\n      this.setState({\n        loader: {\n          display: \"none\"\n        }\n      });\n    }\n  }\n\n  render() {\n    const works = this.props.works;\n    var count = 4;\n    var start = this.state.start;\n\n    const getMoreData = () => {\n      this.setState({\n        loader: {\n          display: \"block\"\n        }\n      });\n      this.props.fetchData(\"works.php\", this.state.start, count);\n      start += 4;\n      console.log(this.props.works);\n      this.setState(start = {\n        start\n      });\n    };\n\n    return React.createElement(\"div\", {\n      className: \"worksContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.props.title.workTitle ? this.props.title.workTitle.title : \"\"), React.createElement(\"div\", {\n      className: \"worksContext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.title.workTitle ? this.props.title.workTitle.context : \"\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"workList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: this.state.loader,\n      src: Loader,\n      alt: \"Loader\",\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), works.map((data, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"work\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: data.img,\n        alt: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"workInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, data.name), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, data.context)));\n    })), React.createElement(\"button\", {\n      onClick: getMoreData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"LOAD MORE\"));\n  }\n\n}\n\nexport default OurWorks;","map":{"version":3,"sources":["E:\\React-app\\frontend\\src\\components\\ourWorks.js"],"names":["React","OurWorks","Component","state","start","loader","display","workList","componentDidMount","props","fetchData","componentDidUpdate","prevProps","works","setState","render","count","getMoreData","console","log","title","workTitle","context","Loader","map","data","index","img","name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../styles/sass/ourWorks.css\";\r\nimport Loader from \"../resource/loader.svg\"\r\nclass OurWorks extends React.Component {\r\n    state = {\r\n        start: 4,\r\n        loader:{display:\"block\"},\r\n        workList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchData(\"works.php\", this.state.start-4, 4);\r\n    }\r\ncomponentDidUpdate(prevProps) {\r\n    if (prevProps.works !== this.props.works) {\r\n        this.setState({loader:{display:\"none\"}})\r\n    }\r\n\r\n}\r\n\r\n    render() {\r\n        const {works} = this.props;\r\n        var count = 4;\r\n        var start = this.state.start;\r\n\r\n        const getMoreData = () => {\r\n            this.setState({loader:{display:\"block\"}})\r\n\r\n            this.props.fetchData(\"works.php\", this.state.start, count);\r\n            start+=4;\r\n            console.log(this.props.works)\r\n            this.setState(start = {start});\r\n        };\r\n            return (\r\n                <div className=\"worksContent\">\r\n                    <h1>{this.props.title.workTitle ? this.props.title.workTitle.title : \"\"}</h1>\r\n                    <div className=\"worksContext\">\r\n                        <hr/>\r\n                        <h6>{this.props.title.workTitle ? this.props.title.workTitle.context : \"\"}</h6>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"workList\">\r\n                        <img style={this.state.loader} src={Loader} alt=\"Loader\" className=\"loader\" />\r\n                        {works.map((data, index) => {\r\n                            return (\r\n                                <div key={index} className=\"work\">\r\n                                    <img src={data.img} alt=\"img\"/>\r\n                                    <div className=\"workInfo\">\r\n                                        <h4>{data.name}</h4>\r\n                                        <h6>{data.context}</h6>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <button onClick={getMoreData}>LOAD MORE</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nexport default OurWorks"]},"metadata":{},"sourceType":"module"}